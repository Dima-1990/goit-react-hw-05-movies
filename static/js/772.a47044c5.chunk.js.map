{"version":3,"file":"static/js/772.a47044c5.chunk.js","mappings":"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","sources":["components/SearchAPI/SearchAPI.js","pages/MovieList/MovieItem.jsx","webpack://react-homework-template/./src/components/Form/Form.module.scss?dea5","components/Form/Form.jsx","webpack://react-homework-template/./src/pages/MovieSearch/MovieSearch.module.scss?3436","pages/MovieSearch/MovieSearch.jsx","webpack://react-homework-template/./src/pages/MovieList/MovieList.module.scss?78f4"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a620a6416fb18e40f7d335c64c3f9e0e';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const SearchTrend = async (page=1) => {\n    const serverDataURL = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`;\n    try {\n        const server = await axios.get(serverDataURL);\n        const data = await server.data;\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const SearchMovies = async (name, page=1) => {\n    const serverDataURL = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${name}&include_adult=false`;\n    try {\n        const server = await axios.get(serverDataURL);\n        const data = await server.data;\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const SearchMoviesDetails = async (id) => {\n    const serverDataURL = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n    try {\n        const server = await axios.get(serverDataURL);\n        const data = await server.data;\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const SearchMoviesActor = async (id) => {\n    const serverDataURL = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    try {\n        const server = await axios.get(serverDataURL);\n        const data = await server.data;\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const SearchMoviesReviews = async (id) => {\n    const serverDataURL = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    try {\n        const server = await axios.get(serverDataURL);\n        const data = await server.data;\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n};","// import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'components/SearchAPI/SearchAPI';\nimport MovieListSCSS from './MovieList.module.scss';\nimport defoltImg from '../../img/default.jpg'\n\nexport const MovieItem = ({movie}) => {\n    const location = useLocation();\n    const url = location.pathname === '/' ? `movies/` : '';\n    return (\n        <li  className={MovieListSCSS.item}>\n            <Link\n            to={`${url}${movie.id}`}\n            className={MovieListSCSS.link}\n            >\n                <img\n                    src={movie.poster_path ? IMG_URL + movie.poster_path : defoltImg}\n                    alt={movie.title}\n                    className={MovieListSCSS.img}\n                />\n                <div className={MovieListSCSS.info}>\n                    <h3>{movie.title}</h3>\n                </div>\n            </Link>\n        </li>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__psS5c\",\"input\":\"Form_input__EwUhk\",\"submit\":\"Form_submit__khcqq\"};","import PropTypes from 'prop-types';\nimport FormSCSS from './Form.module.scss'\n\n\nexport const Form = ({ submit, searchMovieValue, onChang }) => {\n    const onChange = event => {\n        onChang(event.target.value.toLowerCase());\n    };\n    \n    return (\n        <form id=\"search-form\" autoComplete=\"off\" onSubmit={submit} className={FormSCSS.form}>\n            <input\n                className={FormSCSS.input}\n                type=\"text\"\n                name=\"name\"\n                autoFocus\n                placeholder=\"Search movies\"\n                onChange={onChange}\n                value={searchMovieValue}\n            />\n            <button type=\"submit\" className={FormSCSS.submit}>Search</button>\n        </form>\n    )\n}\nForm.propTypes = {\n    submit: PropTypes.func.isRequired,\n    searchMovieValue: PropTypes.string.isRequired,\n    onChang: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"p\":\"MovieSearch_p__MwZHn\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMovies } from '../../components/SearchAPI/SearchAPI';\nimport { Form } from 'components/Form/Form';\nimport { MovieItem } from '../MovieList/MovieItem';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieListSCSS from '../MovieList/MovieList.module.scss';\nimport MovieSearchSCSS from './MovieSearch.module.scss';\n\nconst MovieSearch = () => {\n    const [searchMovieValue, setSearchMovieValue] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [loader, setLoader] = useState(false);\n    const moviesName = searchParams.get('name') ?? '';\n    const histori = window.location.search.split('=')[1];\n\n    useEffect(() => {\n        if (!searchMovieValue && !histori) {\n            return;\n        }\n        if (!searchMovieValue) {\n            serverAPI(histori);\n            return;\n        }\n\n        serverAPI(searchMovieValue);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [searchMovieValue]);\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        setSearchMovieValue(event.target.name.value);\n    }\n\n    const onChang=(name)=> {\n        const nextParams = name !== '' ? { name } : {};\n        setSearchParams(nextParams);\n    }\n\n    const serverAPI = async (name) => {\n        setError(false);\n        setLoader(true);\n        const data = await SearchMovies(name);\n        const results = await data.results;\n        console.log(results);\n        setMovies(results);\n        if (!results.length) {\n            setError(true);\n        }\n        setLoader(false);\n    };\n    \n    return (\n        <main>\n            <section>\n                <Form submit={onSubmit} searchMovieValue={moviesName} onChang={onChang} />\n                {loader && <Loader />}\n                {error && (<p className={MovieSearchSCSS.p}>Sorry, we didn't find anything. Try again.</p>)}\n                <ul className={MovieListSCSS.list}>\n                {movies.map(movie => (\n                    <MovieItem key={movie.id} movie={movie}></MovieItem>\n                ))}\n                </ul>\n            </section>\n        </main>\n    );\n};\nexport default MovieSearch;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MovieList_text__6RJQy\",\"list\":\"MovieList_list__2rnyn\",\"item\":\"MovieList_item__NkPkZ\",\"link\":\"MovieList_link__Vh6rU\",\"img\":\"MovieList_img__eH6st\",\"info\":\"MovieList_info__eZ7jA\"};"],"names":["BASE_URL","API_KEY","IMG_URL","SearchTrend","page","serverDataURL","axios","server","data","console","log","SearchMovies","name","SearchMoviesDetails","id","SearchMoviesActor","SearchMoviesReviews","MovieItem","movie","url","useLocation","pathname","className","MovieListSCSS","to","src","poster_path","defoltImg","alt","title","Form","submit","searchMovieValue","onChang","autoComplete","onSubmit","FormSCSS","type","autoFocus","placeholder","onChange","event","target","value","toLowerCase","useState","setSearchMovieValue","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","loader","setLoader","moviesName","get","histori","window","location","search","split","useEffect","serverAPI","results","length","preventDefault","Loader","MovieSearchSCSS","map"],"sourceRoot":""}